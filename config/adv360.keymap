#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        lmc: layer_mod_ctrl {
            label = "LAYER_MOD_CTRL";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 4>
                , <&macro_press &kp LCTRL>
                , <&macro_pause_for_release>
                , <&macro_release &kp LCTRL>
                , <&macro_release &mo 4>
                ;
        };
        lmg: layer_mod_gui {
            label = "LAYER_MOD_GUI";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 4>
                , <&macro_press &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI>
                , <&macro_release &mo 4>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";

        t {
            bindings = <&kp T>;
            key-positions = <70 22>;
            layers = <0>;
        };

        r {
            bindings = <&kp R>;
            key-positions = <70 23>;
            layers = <0>;
        };

        e {
            bindings = <&kp E>;
            key-positions = <70 24>;
            layers = <0>;
        };

        w {
            bindings = <&kp W>;
            key-positions = <70 25>;
            layers = <0>;
        };

        q {
            bindings = <&kp Q>;
            key-positions = <70 26>;
            layers = <0>;
        };

        g {
            bindings = <&kp G>;
            key-positions = <70 40>;
            layers = <0>;
        };

        f {
            bindings = <&kp F>;
            key-positions = <70 41>;
            layers = <0>;
        };

        d {
            bindings = <&kp D>;
            key-positions = <70 42>;
            layers = <0>;
        };

        s {
            bindings = <&kp S>;
            key-positions = <70 43>;
            layers = <0>;
        };

        a {
            bindings = <&kp A>;
            key-positions = <70 44>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <70 45>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <70 54>;
            layers = <0>;
        };

        v {
            bindings = <&kp V>;
            key-positions = <70 55>;
            layers = <0>;
        };

        c {
            bindings = <&kp C>;
            key-positions = <70 56>;
            layers = <0>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <70 57>;
            layers = <0>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <70 58>;
            layers = <0>;
        };

        seven {
            bindings = <&kp N7>;
            key-positions = <69 23>;
            layers = <0>;
        };

        eight {
            bindings = <&kp N8>;
            key-positions = <69 24>;
            layers = <0>;
        };

        nine {
            bindings = <&kp N9>;
            key-positions = <69 25>;
            layers = <0>;
        };

        four {
            bindings = <&kp N4>;
            key-positions = <69 41>;
            layers = <0>;
        };

        five {
            bindings = <&kp N5>;
            key-positions = <69 42>;
            layers = <0>;
        };

        six {
            bindings = <&kp N6>;
            key-positions = <69 43>;
            layers = <0>;
        };

        zero {
            bindings = <&kp N0>;
            key-positions = <69 54>;
            layers = <0>;
        };

        one {
            bindings = <&kp N1>;
            key-positions = <69 55>;
            layers = <0>;
        };

        two {
            bindings = <&kp N2>;
            key-positions = <69 56>;
            layers = <0>;
        };

        three {
            bindings = <&kp N3>;
            key-positions = <69 57>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp LS(N7)>;
            key-positions = <69 44 23>;
            layers = <0>;
        };

        star {
            bindings = <&kp LS(N8)>;
            key-positions = <69 44 24>;
            layers = <0>;
        };

        l_paren {
            bindings = <&kp LS(N9)>;
            key-positions = <69 44 25>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp LS(N4)>;
            key-positions = <69 44 41>;
            layers = <0>;
        };

        percent {
            bindings = <&kp LS(N5)>;
            key-positions = <69 44 42>;
            layers = <0>;
        };

        caret {
            bindings = <&kp LS(N6)>;
            key-positions = <69 44 43>;
            layers = <0>;
        };

        r_paren {
            bindings = <&kp LS(N0)>;
            key-positions = <69 44 54>;
            layers = <0>;
        };

        bang {
            bindings = <&kp LS(N1)>;
            key-positions = <69 44 55>;
            layers = <0>;
        };

        at {
            bindings = <&kp LS(N2)>;
            key-positions = <69 44 56>;
            layers = <0>;
        };

        hash {
            bindings = <&kp LS(N3)>;
            key-positions = <69 44 57>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5    &tog 1                                                     &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
  &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T     &none                                                     &kp TAB   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
  &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G     &none  &kp LCTRL  &kp LALT       &lmg  &lmc      &kp ESC   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
&kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                       &kp HOME      &kp PG_UP                         &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
    &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC    &kp DEL   &kp END      &kp PG_DN   &kp BSPC  &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5    &trans                                                     &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
  &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T     &none                                                     &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
  &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G     &none  &kp LCTRL  &kp LALT       &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
&kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                       &kp HOME      &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
    &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC    &kp DEL   &kp END      &kp PG_DN   &kp BSPC  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                       &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans   &none                                       &none  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none  &trans  &trans      &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &none                                                            &trans  &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none         &none  &bootloader                                                       &bootloader  &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none         &none        &none  &none  &none      &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5  &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none         &none                      &none           &none                                      &none       &none       &none  &none  &none  &none
&none         &none         &none         &none         &none                      &none  &none  &none           &none  &bl BL_TOG         &rgb_ug RGB_TOG         &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        with_mod {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans         &trans       &trans   &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &kp LS(GRAVE)  &kp LS(TAB)  &kp TAB  &kp GRAVE  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans       &kp LEFT     &kp DOWN   &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                         &trans       &trans   &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                      &trans   &trans     &trans  &trans  &trans
            >;
        };
    };
};
